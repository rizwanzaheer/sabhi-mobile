// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component(snapshot): Indicator renders disabled 1`] = `
<View
  accessible={true}
  focusable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    pointerEvents="auto"
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": undefined,
        "borderRadius": undefined,
        "flex": undefined,
        "flexDirection": "row",
        "height": undefined,
        "justifyContent": undefined,
        "margin": undefined,
        "marginBottom": 5,
        "marginLeft": undefined,
        "marginRight": undefined,
        "marginTop": undefined,
        "padding": undefined,
        "paddingBottom": undefined,
        "paddingHorizontal": undefined,
        "paddingLeft": undefined,
        "paddingRight": undefined,
        "paddingTop": undefined,
        "width": undefined,
      }
    }
  >
    <Icon
      color="#BBBBBB"
      name="ios-radio-button-off"
      size={26}
    />
    <View
      pointerEvents="auto"
      style={
        Object {
          "alignItems": undefined,
          "backgroundColor": undefined,
          "borderRadius": undefined,
          "flex": 1,
          "flexDirection": undefined,
          "height": undefined,
          "justifyContent": undefined,
          "margin": undefined,
          "marginBottom": undefined,
          "marginLeft": undefined,
          "marginRight": undefined,
          "marginTop": undefined,
          "padding": undefined,
          "paddingBottom": undefined,
          "paddingHorizontal": undefined,
          "paddingLeft": 8,
          "paddingRight": undefined,
          "paddingTop": undefined,
          "width": undefined,
        }
      }
    >
      <Text
        style={
          Object {
            "flexWrap": "wrap",
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Component(snapshot): Indicator renders unselected 1`] = `
<View
  accessible={true}
  focusable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    pointerEvents="auto"
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": undefined,
        "borderRadius": undefined,
        "flex": undefined,
        "flexDirection": "row",
        "height": undefined,
        "justifyContent": undefined,
        "margin": undefined,
        "marginBottom": 5,
        "marginLeft": undefined,
        "marginRight": undefined,
        "marginTop": undefined,
        "padding": undefined,
        "paddingBottom": undefined,
        "paddingHorizontal": undefined,
        "paddingLeft": undefined,
        "paddingRight": undefined,
        "paddingTop": undefined,
        "width": undefined,
      }
    }
  >
    <Icon
      color="#BBBBBB"
      name="ios-radio-button-off"
      size={26}
    />
    <View
      pointerEvents="auto"
      style={
        Object {
          "alignItems": undefined,
          "backgroundColor": undefined,
          "borderRadius": undefined,
          "flex": 1,
          "flexDirection": undefined,
          "height": undefined,
          "justifyContent": undefined,
          "margin": undefined,
          "marginBottom": undefined,
          "marginLeft": undefined,
          "marginRight": undefined,
          "marginTop": undefined,
          "padding": undefined,
          "paddingBottom": undefined,
          "paddingHorizontal": undefined,
          "paddingLeft": 8,
          "paddingRight": undefined,
          "paddingTop": undefined,
          "width": undefined,
        }
      }
    >
      <Text
        style={
          Object {
            "flexWrap": "wrap",
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Component(snapshot): Indicator renders with children text 1`] = `
<View
  accessible={true}
  focusable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    pointerEvents="auto"
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": undefined,
        "borderRadius": undefined,
        "flex": undefined,
        "flexDirection": "row",
        "height": undefined,
        "justifyContent": undefined,
        "margin": undefined,
        "marginBottom": 5,
        "marginLeft": undefined,
        "marginRight": undefined,
        "marginTop": undefined,
        "padding": undefined,
        "paddingBottom": undefined,
        "paddingHorizontal": undefined,
        "paddingLeft": undefined,
        "paddingRight": undefined,
        "paddingTop": undefined,
        "width": undefined,
      }
    }
  >
    <Icon
      color="#BBBBBB"
      name="ios-radio-button-off"
      size={26}
    />
    <View
      pointerEvents="auto"
      style={
        Object {
          "alignItems": undefined,
          "backgroundColor": undefined,
          "borderRadius": undefined,
          "flex": 1,
          "flexDirection": undefined,
          "height": undefined,
          "justifyContent": undefined,
          "margin": undefined,
          "marginBottom": undefined,
          "marginLeft": undefined,
          "marginRight": undefined,
          "marginTop": undefined,
          "padding": undefined,
          "paddingBottom": undefined,
          "paddingHorizontal": undefined,
          "paddingLeft": 8,
          "paddingRight": undefined,
          "paddingTop": undefined,
          "width": undefined,
        }
      }
    >
      <Text
        style={
          Object {
            "flexWrap": "wrap",
          }
        }
      >
        Test radio button text
      </Text>
    </View>
  </View>
</View>
`;

exports[`Component(snapshot): Indicator renders with default props 1`] = `
<View
  accessible={true}
  focusable={true}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    pointerEvents="auto"
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": undefined,
        "borderRadius": undefined,
        "flex": undefined,
        "flexDirection": "row",
        "height": undefined,
        "justifyContent": undefined,
        "margin": undefined,
        "marginBottom": 5,
        "marginLeft": undefined,
        "marginRight": undefined,
        "marginTop": undefined,
        "padding": undefined,
        "paddingBottom": undefined,
        "paddingHorizontal": undefined,
        "paddingLeft": undefined,
        "paddingRight": undefined,
        "paddingTop": undefined,
        "width": undefined,
      }
    }
  >
    <Icon
      color="#BBBBBB"
      name="ios-radio-button-on"
      size={26}
    />
    <View
      pointerEvents="auto"
      style={
        Object {
          "alignItems": undefined,
          "backgroundColor": undefined,
          "borderRadius": undefined,
          "flex": 1,
          "flexDirection": undefined,
          "height": undefined,
          "justifyContent": undefined,
          "margin": undefined,
          "marginBottom": undefined,
          "marginLeft": undefined,
          "marginRight": undefined,
          "marginTop": undefined,
          "padding": undefined,
          "paddingBottom": undefined,
          "paddingHorizontal": undefined,
          "paddingLeft": 8,
          "paddingRight": undefined,
          "paddingTop": undefined,
          "width": undefined,
        }
      }
    >
      <Text
        style={
          Object {
            "flexWrap": "wrap",
          }
        }
      />
    </View>
  </View>
</View>
`;
